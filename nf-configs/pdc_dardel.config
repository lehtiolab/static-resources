params {
  project = "naiss2025-5-323"
}


process {
  withName: createNewSpectraLookup {
    time = { mzmlfiles.size() > 100 ? check_max( 0.02.h * mzmlfiles.size() * task.attempt, 'time' ) : 2.h * task.attempt}
  }
  withName: quantifySpectra {
    memory = { (infile.size() >> 30) > 5 ? check_max(infile.size() * 4 as nextflow.util.MemoryUnit, 'memory') : '16 GB'}
    time = { check_max( 1.h * (infile.size() >> 30) * task.attempt, 'time' ) }
  }
  withName: quantifyMS1 {
    cpus = 4
  }
  withName: msgfPlus {
    cpus = 4
    memory = { (db.size() >> 30) < 1 ? 16.GB : "${db.size() * 16}B"  }
    time = { (mzml.size() >> 30) < 1 ? check_max(3.h * task.attempt, 'time') : check_max((3 + (mzml.size() >> 30)) * task.attempt * 1.h, 'time') }
  }
  withName: quantLookup {
    time = { check_max( 0.1.h * isofns.size() * task.attempt, 'time' ) }
    memory = '32 GB'
  }
  withName: createPSMTable {
    // lookup size is a proxy for amount of PSMs
    time = { (lookup.size() >> 30) > 1 ? check_max( 1.h * (lookup.size() >> 30) * task.attempt, 'time' ) : 2.h * task.attempt }
    // protein grouping needs memory if there's lots of information
    memory = { (lookup.size() >> 30) < 40 ? task.attempt * 16.GB : check_max("${(task.attempt * lookup.size() * 0.4).round()}B", 'memory') }
  }

  withName: percolator {
    time = { listify(mzids).size() > 40 ? check_max( 0.1.h * listify(mzids).size() * task.attempt , 'time' ) : 4.h * task.attempt }
    cpus = 4
  }
  withName: DEqMS {
    cpus = 16
  }

  withName: luciphorPTMLocalizationScoring {
    time = { check_max( (allpsms.size() >> 20) * 0.0067.h * task.attempt, 'time') }
    cpus = 2
  }
  
  withName: msconvert {
    time = 5.h
  }
}
